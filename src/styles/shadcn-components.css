/**
 * shadcn/ui Inspired Components for Vanilla JavaScript
 * Component library matching shadcn/ui patterns and styling
 */

/* ==========================================================================
   Button Component
   ========================================================================== */

.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  border-radius: var(--radius);
  font-size: 0.875rem;
  font-weight: 500;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  cursor: pointer;
  border: 1px solid transparent;
  outline: none;
  text-decoration: none;
  user-select: none;
}

.btn:focus-visible {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
}

.btn:disabled {
  pointer-events: none;
  opacity: 0.5;
}

/* Button Variants */
.btn-default {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
}

.btn-default:hover {
  background-color: hsl(var(--primary) / 0.9);
}

.btn-destructive {
  background-color: hsl(var(--destructive));
  color: hsl(var(--destructive-foreground));
}

.btn-destructive:hover {
  background-color: hsl(var(--destructive) / 0.9);
}

.btn-outline {
  border: 1px solid hsl(var(--input));
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
}

.btn-outline:hover {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

.btn-secondary {
  background-color: hsl(var(--secondary));
  color: hsl(var(--secondary-foreground));
}

.btn-secondary:hover {
  background-color: hsl(var(--secondary) / 0.8);
}

.btn-ghost {
  background-color: transparent;
  color: hsl(var(--foreground));
}

.btn-ghost:hover {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

.btn-link {
  background-color: transparent;
  color: hsl(var(--primary));
  text-decoration: underline;
  text-underline-offset: 4px;
}

.btn-link:hover {
  text-decoration: none;
}

/* Button Sizes */
.btn-default,
.btn-destructive,
.btn-outline,
.btn-secondary,
.btn-ghost,
.btn-link {
  height: 2.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
}

.btn-sm {
  height: 2.25rem;
  border-radius: calc(var(--radius) - 2px);
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-size: 0.8125rem;
}

.btn-lg {
  height: 2.75rem;
  border-radius: calc(var(--radius) + 2px);
  padding-left: 2rem;
  padding-right: 2rem;
}

.btn-icon {
  height: 2.5rem;
  width: 2.5rem;
  padding: 0;
}

/* ==========================================================================
   Card Component
   ========================================================================== */

.card {
  border-radius: calc(var(--radius) + 2px);
  border: 1px solid hsl(var(--border));
  background-color: hsl(var(--card));
  color: hsl(var(--card-foreground));
  box-shadow: var(--shadow-sm);
}

.card-header {
  display: flex;
  flex-direction: column;
  space-y: 1.5;
  padding: 1.5rem;
}

.card-header p {
  margin: 0;
}

.card-title {
  font-size: 1.5rem;
  font-weight: 600;
  line-height: 1;
  letter-spacing: -0.025em;
  margin: 0;
}

.card-description {
  font-size: 0.875rem;
  color: hsl(var(--muted-foreground));
  margin: 0;
  margin-top: 0.375rem;
}

.card-content {
  padding: 1.5rem;
  padding-top: 0;
}

.card-footer {
  display: flex;
  align-items: center;
  padding: 1.5rem;
  padding-top: 0;
}

/* ==========================================================================
   Input Component
   ========================================================================== */

.input {
  display: flex;
  height: 2.5rem;
  width: 100%;
  border-radius: var(--radius);
  border: 1px solid hsl(var(--input));
  background-color: hsl(var(--background));
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-size: 0.875rem;
  color: hsl(var(--foreground));
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.input::placeholder {
  color: hsl(var(--muted-foreground));
}

.input:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
  box-shadow: 0 0 0 2px hsl(var(--ring));
}

.input:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

/* ==========================================================================
   Textarea Component
   ========================================================================== */

.textarea {
  display: flex;
  min-height: 5rem;
  width: 100%;
  border-radius: var(--radius);
  border: 1px solid hsl(var(--input));
  background-color: hsl(var(--background));
  padding: 0.75rem;
  font-size: 0.875rem;
  color: hsl(var(--foreground));
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  resize: vertical;
}

.textarea::placeholder {
  color: hsl(var(--muted-foreground));
}

.textarea:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
  box-shadow: 0 0 0 2px hsl(var(--ring));
}

.textarea:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

/* ==========================================================================
   Badge Component
   ========================================================================== */

.badge {
  display: inline-flex;
  align-items: center;
  border-radius: 9999px;
  padding-left: 0.625rem;
  padding-right: 0.625rem;
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
  font-size: 0.75rem;
  font-weight: 600;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  border: 1px solid transparent;
}

.badge:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  box-shadow: 0 0 0 2px hsl(var(--ring));
}

.badge-default {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
}

.badge-default:hover {
  background-color: hsl(var(--primary) / 0.8);
}

.badge-secondary {
  background-color: hsl(var(--secondary));
  color: hsl(var(--secondary-foreground));
}

.badge-secondary:hover {
  background-color: hsl(var(--secondary) / 0.8);
}

.badge-destructive {
  background-color: hsl(var(--destructive));
  color: hsl(var(--destructive-foreground));
}

.badge-destructive:hover {
  background-color: hsl(var(--destructive) / 0.8);
}

.badge-outline {
  color: hsl(var(--foreground));
  border: 1px solid hsl(var(--border));
}

/* ==========================================================================
   Checkbox Component
   ========================================================================== */

.checkbox {
  height: 1rem;
  width: 1rem;
  flex-shrink: 0;
  border-radius: 0.125rem;
  border: 1px solid hsl(var(--primary));
  background-color: hsl(var(--background));
  cursor: pointer;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  position: relative;
}

.checkbox:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
  box-shadow: 0 0 0 2px hsl(var(--ring));
}

.checkbox:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

.checkbox:checked {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
}

.checkbox:checked::after {
  content: "âœ“";
  position: absolute;
  top: -1px;
  left: 1px;
  font-size: 0.75rem;
  line-height: 1;
}

/* ==========================================================================
   Dropdown Menu Component
   ========================================================================== */

.dropdown-menu {
  z-index: 50;
  min-width: 8rem;
  overflow: hidden;
  border-radius: var(--radius);
  border: 1px solid hsl(var(--border));
  background-color: hsl(var(--popover));
  color: hsl(var(--popover-foreground));
  box-shadow: var(--shadow-md);
  animation-duration: 150ms;
  animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.dropdown-menu[data-state="open"] {
  animation-name: slideIn;
}

.dropdown-menu[data-state="closed"] {
  animation-name: slideOut;
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes slideOut {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.95);
  }
}

.dropdown-menu-item {
  position: relative;
  display: flex;
  cursor: default;
  user-select: none;
  align-items: center;
  border-radius: calc(var(--radius) - 2px);
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
  font-size: 0.875rem;
  outline: none;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.dropdown-menu-item:focus {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

.dropdown-menu-item[data-disabled] {
  pointer-events: none;
  opacity: 0.5;
}

.dropdown-menu-separator {
  margin-left: -0.25rem;
  margin-right: -0.25rem;
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
  height: 1px;
  background-color: hsl(var(--muted));
}

/* ==========================================================================
   Dialog/Modal Component
   ========================================================================== */

.dialog-overlay {
  position: fixed;
  inset: 0;
  z-index: 50;
  background-color: rgb(0 0 0 / 0.8);
  animation-duration: 150ms;
  animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.dialog-overlay[data-state="open"] {
  animation-name: fadeIn;
}

.dialog-overlay[data-state="closed"] {
  animation-name: fadeOut;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

.dialog-content {
  position: fixed;
  left: 50%;
  top: 50%;
  z-index: 50;
  display: grid;
  width: 100%;
  max-width: 32rem;
  translate: -50% -50%;
  gap: 1rem;
  border: 1px solid hsl(var(--border));
  background-color: hsl(var(--background));
  padding: 1.5rem;
  box-shadow: var(--shadow-lg);
  animation-duration: 150ms;
  animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  border-radius: calc(var(--radius) + 2px);
}

.dialog-content[data-state="open"] {
  animation-name: slideInDialog;
}

.dialog-content[data-state="closed"] {
  animation-name: slideOutDialog;
}

@keyframes slideInDialog {
  from {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

@keyframes slideOutDialog {
  from {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
  to {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.95);
  }
}

.dialog-header {
  display: flex;
  flex-direction: column;
  space-y: 1.5;
  text-align: center;
}

.dialog-title {
  font-size: 1.125rem;
  font-weight: 600;
  line-height: 1;
  letter-spacing: -0.025em;
  margin: 0;
}

.dialog-description {
  font-size: 0.875rem;
  color: hsl(var(--muted-foreground));
  margin: 0;
  margin-top: 0.375rem;
}

.dialog-footer {
  display: flex;
  flex-direction: column-reverse;
  gap: 0.5rem;
}

@media (min-width: 640px) {
  .dialog-footer {
    flex-direction: row;
    justify-content: flex-end;
  }
}

.dialog-close {
  position: absolute;
  right: 1rem;
  top: 1rem;
  border-radius: calc(var(--radius) - 2px);
  opacity: 0.7;
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  background: transparent;
  border: none;
  cursor: pointer;
  padding: 0.25rem;
}

.dialog-close:hover {
  opacity: 1;
}

.dialog-close:focus-visible {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
}

/* ==========================================================================
   Toast Component
   ========================================================================== */

.toast-viewport {
  position: fixed;
  top: 0;
  z-index: 100;
  display: flex;
  max-height: 100vh;
  width: 100%;
  flex-direction: column-reverse;
  padding: 1rem;
}

@media (min-width: 640px) {
  .toast-viewport {
    bottom: 0;
    right: 0;
    top: auto;
    flex-direction: column;
    max-width: 26rem;
  }
}

.toast {
  position: relative;
  pointer-events: auto;
  display: flex;
  width: 100%;
  align-items: center;
  justify-content: space-between;
  space-between: 1rem;
  overflow: hidden;
  border-radius: var(--radius);
  border: 1px solid hsl(var(--border));
  background-color: hsl(var(--background));
  padding: 1.5rem;
  padding-right: 2rem;
  color: hsl(var(--foreground));
  box-shadow: var(--shadow-lg);
  animation-duration: 150ms;
  animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  margin-bottom: 0.5rem;
}

.toast[data-state="open"] {
  animation-name: slideInToast;
}

.toast[data-state="closed"] {
  animation-name: slideOutToast;
}

@keyframes slideInToast {
  from {
    transform: translateX(calc(100% + 1rem));
  }
  to {
    transform: translateX(0);
  }
}

@keyframes slideOutToast {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(calc(100% + 1rem));
  }
}

.toast-destructive {
  border-color: hsl(var(--destructive));
  color: hsl(var(--destructive));
}

.toast-title {
  font-size: 0.875rem;
  font-weight: 600;
  margin: 0;
  margin-bottom: 0.25rem;
}

.toast-description {
  font-size: 0.875rem;
  opacity: 0.9;
  margin: 0;
}

.toast-close {
  position: absolute;
  right: 0.5rem;
  top: 0.5rem;
  border-radius: calc(var(--radius) - 2px);
  opacity: 0.7;
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  background: transparent;
  border: none;
  cursor: pointer;
  padding: 0.25rem;
}

.toast-close:hover {
  opacity: 1;
}

.toast-close:focus-visible {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
}

/* ==========================================================================
   Label Component
   ========================================================================== */

.label {
  font-size: 0.875rem;
  font-weight: 500;
  line-height: 1;
  color: hsl(var(--foreground));
  cursor: pointer;
}

.label[data-disabled] {
  cursor: not-allowed;
  opacity: 0.7;
}

/* ==========================================================================
   Separator Component
   ========================================================================== */

.separator {
  flex-shrink: 0;
  background-color: hsl(var(--border));
}

.separator[data-orientation="horizontal"] {
  height: 1px;
  width: 100%;
}

.separator[data-orientation="vertical"] {
  height: 100%;
  width: 1px;
}

/* ==========================================================================
   Loading Spinner Component
   ========================================================================== */

.spinner {
  width: 1rem;
  height: 1rem;
  border: 2px solid hsl(var(--muted));
  border-top: 2px solid hsl(var(--primary));
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.spinner-sm {
  width: 0.75rem;
  height: 0.75rem;
  border-width: 1px;
}

.spinner-lg {
  width: 1.5rem;
  height: 1.5rem;
  border-width: 3px;
}

/* ==========================================================================
   Avatar Component
   ========================================================================== */

.avatar {
  position: relative;
  display: flex;
  height: 2.5rem;
  width: 2.5rem;
  flex-shrink: 0;
  overflow: hidden;
  border-radius: 50%;
}

.avatar-image {
  aspect-ratio: 1 / 1;
  height: 100%;
  width: 100%;
  object-fit: cover;
}

.avatar-fallback {
  display: flex;
  height: 100%;
  width: 100%;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  background-color: hsl(var(--muted));
  color: hsl(var(--muted-foreground));
  font-size: 0.875rem;
  font-weight: 500;
}

/* ==========================================================================
   Switch Component
   ========================================================================== */

.switch {
  display: inline-flex;
  height: 1.5rem;
  width: 2.75rem;
  flex-shrink: 0;
  cursor: pointer;
  align-items: center;
  border-radius: 9999px;
  border: 2px solid transparent;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
  background-color: hsl(var(--input));
}

.switch:focus-visible {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
}

.switch:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

.switch[data-state="checked"] {
  background-color: hsl(var(--primary));
}

.switch[data-state="unchecked"] {
  background-color: hsl(var(--input));
}

.switch-thumb {
  pointer-events: none;
  display: block;
  height: 1.25rem;
  width: 1.25rem;
  border-radius: 50%;
  background-color: hsl(var(--background));
  box-shadow: var(--shadow);
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 200ms;
  transform: translateX(0);
}

.switch[data-state="checked"] .switch-thumb {
  transform: translateX(1.25rem);
}